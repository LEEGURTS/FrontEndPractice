{"version":3,"file":"static/js/937.c32b736e.chunk.js","mappings":"oNA2DA,EAxDsC,WACpC,IAAMA,GAAWC,EAAAA,EAAAA,UACjB,GAA0BC,EAAAA,EAAAA,UAAS,GAAE,eAA9BC,EAAK,KAAEC,EAAQ,KAEhBC,GAAoBC,EAAAA,EAAAA,cACxB,SAACC,GACKP,EAASQ,SACXR,EAASQ,QAAQC,aAEnBT,EAASQ,QAAU,IAAIE,sBACrB,SAACC,GACKA,EAAE,GAAGC,gBACPR,EAASD,EAAQ,EAErB,GACA,CAAEU,UAAW,KAEXN,GACFP,EAASQ,QAAQM,QAAQP,EAE7B,GACA,CAACJ,EAAOH,IAGV,OACE,gBAAKe,UAAU,sBAAqB,UAClC,gBAAKA,UAAU,+DAA8D,SAC1EC,MAAc,GAARb,EAAa,IACjBc,KAAK,GACLC,KAAI,SAACC,EAAGC,GACP,IAAMC,EAAwB,IAAblB,EAAQ,GAAU,EACnC,OACE,SAACmB,EAAA,MAAU,CAETC,QAAS,CAAEC,EAAG,IACdC,SAAU,CAAEC,MAAM,GAClBC,YAAa,CACXC,QAAS,EACTJ,EAAG,EACHK,WAAY,CAAEC,SAAU,KAE1BC,IAAKX,GAAOC,EAAUhB,EAAoB,KAC1CU,UAAU,qCAAoC,UAE9C,gBACEA,UAAU,+BACViB,IAAK,0CAA4CZ,KAb9CA,EAiBX,OAIV,E,UC7CA,EAR0C,WACxC,OACE,SAACa,EAAA,EAAM,WACL,SAAC,EAAI,KAGX,C","sources":["components/Grid/Grid.tsx","pages/GridPage.tsx"],"sourcesContent":["import { motion } from \"framer-motion\";\r\nimport React, { useRef, useState, useCallback } from \"react\";\r\n\r\nconst Grid: React.FunctionComponent = () => {\r\n  const observer = useRef<IntersectionObserver>();\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const onObserverChanged = useCallback(\r\n    (node: HTMLDivElement | null) => {\r\n      if (observer.current) {\r\n        observer.current.disconnect();\r\n      }\r\n      observer.current = new IntersectionObserver(\r\n        (e) => {\r\n          if (e[0].isIntersecting) {\r\n            setIndex(index + 1);\r\n          }\r\n        },\r\n        { threshold: 0.4 }\r\n      );\r\n      if (node) {\r\n        observer.current.observe(node);\r\n      }\r\n    },\r\n    [index, observer]\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-full min-h-screen\">\r\n      <div className=\"w-full flex flex-wrap p-20 gap-10 justify-center items-start\">\r\n        {Array(index * 32 + 32)\r\n          .fill(0)\r\n          .map((_, idx) => {\r\n            const lastIdx = (index + 1) * 32 - 1;\r\n            return (\r\n              <motion.div\r\n                key={idx}\r\n                initial={{ y: 50 }}\r\n                viewport={{ once: true }}\r\n                whileInView={{\r\n                  opacity: 1,\r\n                  y: 0,\r\n                  transition: { duration: 0.5 },\r\n                }}\r\n                ref={idx == lastIdx ? onObserverChanged : null}\r\n                className=\"md:w-52 md:h-52 w-80 h-80 relative\"\r\n              >\r\n                <img\r\n                  className=\"rounded-[1em] drop-shadow-lg\"\r\n                  src={\"http://placeimg.com/250/250/any?random=\" + idx}\r\n                ></img>\r\n              </motion.div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n","import React from \"react\";\r\nimport Grid from \"../components/Grid/Grid\";\r\nimport Layout from \"../components/Layout/Layout\";\r\n\r\nconst GridPage: React.FunctionComponent = () => {\r\n  return (\r\n    <Layout>\r\n      <Grid />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default GridPage;\r\n"],"names":["observer","useRef","useState","index","setIndex","onObserverChanged","useCallback","node","current","disconnect","IntersectionObserver","e","isIntersecting","threshold","observe","className","Array","fill","map","_","idx","lastIdx","motion","initial","y","viewport","once","whileInView","opacity","transition","duration","ref","src","Layout"],"sourceRoot":""}