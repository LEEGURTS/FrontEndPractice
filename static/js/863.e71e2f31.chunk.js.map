{"version":3,"file":"static/js/863.e71e2f31.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","components/Arcodian/arcodianItems.ts","components/Arcodian/ArcodianInfo.tsx","components/Arcodian/Arcodian.tsx","pages/ArcodianPage.tsx"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { env } from '../../utils/process.mjs';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (env !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import sync from 'framesync';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","export const arcodianItems = [\r\n  {\r\n    id: 1,\r\n    path: \"https://oceandrive.com/get/files/image/galleries/B6553.jpg\",\r\n  },\r\n  {\r\n    id: 2,\r\n    path: \"https://www.kimdawsonagency.com/wp-content/uploads/2020/11/10-1.jpg\",\r\n  },\r\n  {\r\n    id: 3,\r\n    path: \"https://images.pexels.com/photos/2787341/pexels-photo-2787341.jpeg?cs=srgb&dl=pexels-ali-pazani-2787341.jpg&fm=jpg\",\r\n  },\r\n  {\r\n    id: 4,\r\n    path: \"https://thumb.mt.co.kr/06/2020/05/2020050809134676183_1.jpg/dims/optimize/\",\r\n  },\r\n  {\r\n    id: 5,\r\n    path: \"https://photo.coolenjoy.co.kr/data/editor/2105/4b2900b64cdd5d1a8cd93d3bb3cd22341e54cacf.png\",\r\n  },\r\n  {\r\n    id: 6,\r\n    path: \"https://img.insight.co.kr/static/2021/08/21/700/img_20210821181355_cav9acs6.webp\",\r\n  },\r\n  {\r\n    id: 7,\r\n    path: \"http://m.movist.com/upload/article/editor/20201113113354.jpg\",\r\n  },\r\n];\r\n","import React from \"react\";\r\n\r\ninterface ArcodianInfoProps {\r\n  id: number;\r\n  path: string;\r\n}\r\n\r\nconst ArcodianInfo: React.FunctionComponent<ArcodianInfoProps> = ({\r\n  id,\r\n  path,\r\n}) => {\r\n  return (\r\n    <div className=\"mt-[4em] flex flex-col items-center font-bold\">\r\n      <p>Image Id : {id}</p>\r\n      <a href={path}>Image Path : {path}</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArcodianInfo;\r\n","import React, { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { arcodianItems } from \"./arcodianItems\";\r\nimport ArcodianInfo from \"./ArcodianInfo\";\r\n\r\nconst Arcodian: React.FunctionComponent = () => {\r\n  const [selectedIndex, setSelectedIndex] = useState(1);\r\n  return (\r\n    <>\r\n      <div className=\"w-full h-full max-w-[1000px] flex flex-row items-center justify-start rounded-[10px] bg-slate-100 overflow-hidden\">\r\n        <AnimatePresence initial={false}>\r\n          {arcodianItems.map((arcodianItem) => {\r\n            return (\r\n              <motion.div\r\n                key={arcodianItem.id}\r\n                animate={{\r\n                  width: selectedIndex === arcodianItem.id ? \"50%\" : \"10%\",\r\n                  height: \"70vh\",\r\n                }}\r\n                transition={{ type: \"tween\", duration: 0.5 }}\r\n                onClick={() => {\r\n                  setSelectedIndex(arcodianItem.id);\r\n                  console.log(\"Clicked\");\r\n                }}\r\n              >\r\n                <img\r\n                  alt={arcodianItem.id.toString()}\r\n                  src={arcodianItem.path}\r\n                  className=\"w-full h-full object-cover object-center cursor-pointer\"\r\n                ></img>\r\n              </motion.div>\r\n            );\r\n          })}\r\n        </AnimatePresence>\r\n      </div>\r\n      <ArcodianInfo\r\n        id={selectedIndex}\r\n        path={arcodianItems[selectedIndex - 1].path}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Arcodian;\r\n","import React from \"react\";\r\nimport Arcodian from \"../components/Arcodian/Arcodian\";\r\nimport Layout from \"../components/Layout/Layout\";\r\n\r\nconst ArcodianPage: React.FunctionComponent = () => {\r\n  return (\r\n    <Layout>\r\n      <Arcodian />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ArcodianPage;\r\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","undefined","forEach","_","key","PresenceContext","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","warnOnce","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","useUnmountEffect","clear","map","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","env","console","warn","cloneElement","arcodianItems","path","className","href","selectedIndex","setSelectedIndex","arcodianItem","motion","animate","transition","type","duration","onClick","log","alt","toString","src","Layout"],"sourceRoot":""}